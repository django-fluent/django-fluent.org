[uwsgi]
module = $(UWSGI_MODULE)
processes = $(UWSGI_PROCESSES)
threads = $(UWSGI_THREADS)
procname-prefix-spaced = uwsgi: $(UWSGI_MODULE) ($(ALLOWED_HOSTS))

# HTTP serving avoids the need for an Nginx container
http-socket = :8080
http-enable-proxy-protocol = true
http-auto-chunked = true
http-keepalive = 75
http-timeout = 75
offload-threads = $(UWSGI_OFFLOAD_THREADS)

# Stats exposure
stats = :1717
stats-http = true

# Better startup/shutdown in docker:
die-on-term = true
lazy-apps = false
need-app = true
no-defer-accept = true

vacuum = true
master = true
enable-threads = true
thunder-lock = true

# Logging
log-x-forwarded-for = true
#memory-report = true
#disable-logging = true
#log-slow = 200
#log-date = true

# Avoid errors on aborted client connections
ignore-sigpipe = true
ignore-write-errors = true
disable-write-exception = true

# Limits, and kill requests after 120 seconds
harakiri = 120
harakiri-verbose = true
post-buffering = 4096
buffer-size = 65535
#listen=1000
#max-fd=120000

# Reduce memory usage (Linux default is 8MB stack),
# 512k is sufficient for Python
thread-stacksize = 512

# Custom headers for all files, not only those served by Django
add-header = X-Content-Type-Options: nosniff
add-header = X-XSS-Protection: 1; mode=block
add-header = Connection: Keep-Alive

# Static file serving with caching headers and gzip
static-map = /static=/app/web/static
static-map = /media=/app/web/media
static-safe = /usr/local/lib/python3.8/site-packages/
static-safe = /app/src/frontend/static/
static-gzip-dir = /app/web/static/
route-uri = ^/static/ addheader:Vary: Accept-Encoding

# Cache stat() calls
cache2 = name=statcalls,items=2000,keysize=200,blocksize=50
static-cache-paths = 86400

# Redirect http -> https
if-not-env = UWSGI_ALLOW_HTTP=true
add-header = Strict-Transport-Security: max-age=16070400
route-if = equal:${HTTP_X_FORWARDED_PROTO};http redirect-permanent:https://${HTTP_HOST}${REQUEST_URI}
endif =

# Avoid caching static files with a 404, as another docker container might be serving it.
# This also avoids forwarding the request to the Python app.
error-route-status = 404 goto:error404
error-route = .* last:

error-route-label = error404
error-route-if = startswith:${PATH_INFO};/static/ remheader:Expires
error-route-if = startswith:${PATH_INFO};/static/ addheader:Cache-Control: no-cache
error-route = .* last:

# Allow hot reloading (e.g. skaffold)
if-env = UWSGI_HOT_RELOAD=true
exec-asap = manage.py compilemessages
exec-post-app = manage.py migrate --noinput
py-auto-reload = 1
endif =

# -- Site specific

# Memory reused
single-interpreter = 1

# Allow CDN's to cache the files
route-uri = ^/static/ addheader:Cache-Control: public
# Static file serving with caching headers and gzip
# Only keep long cache for files that have cache busting paths
static-expires-uri = ^/media/cache/ 8640000
static-expires-uri = ^/static/.+\.[0-9a-f]{12}\..+$ 8640000
static-expires-uri = ^/static/CACHE/ 8640000
static-expires-uri = ^/static/ 3600
static-expires-uri = ^/media/ 3600

# Redirects:
# - www -> non www
route-host = ^www redirect-permanent:https://django-fluent.org${REQUEST_URI}
# - uppercased host headers
route-host = [A-Z] redirect-permanent:https://django-fluent.org${REQUEST_URI}
# - Other extensions
route-host = fluent\.com$ redirect-permanent:https://django-fluent.org${REQUEST_URI}
# - Aliases
route-host = djangofluent redirect-permanent:https://django-fluent.org${REQUEST_URI}
